<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_tour.CheckInManager</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>CheckInManager</name>
        <script><![CDATA[var CheckInManager = Class.create();
CheckInManager.prototype = {
	initialize: function(siteID, userID) {
		this.siteID = siteID;
		this.userID = userID;
		this.checkInTable = 'x_snc_tour_m2m_check_in';
		this.siteTable = 'x_snc_tour_site';
	},

	isCheckedIn : function() {

		var ci = new GlideRecord(this.checkInTable);
		ci.addQuery('site', this.siteID);
		ci.addQuery('user', this.userID);
		ci.addQuery('status', 'In');
		ci.query();
		
		return ci.next();

	},
	
	checkIn : function() {

		var ci = new GlideRecord(this.checkInTable);
		ci.newRecord();
		ci.status = 'In';
		ci.user = this.userID;
		ci.site = this.siteID;
		ci.insert();
	},
	
	checkOutAll : function() {
		
		var ci = new GlideRecord(this.checkInTable);
		// ci.addQuery('site', this.siteID);
		ci.addQuery('user', this.userID);
		ci.addQuery('status', 'In');
		ci.query();
		
		while (ci.next()) {
			ci.status = 'Out';
			ci.update();
		}
		
	},
	
	usersCheckedIn : function() {
	
		var list = [];
		var ciGR = new GlideRecord(this.checkInTable);
		ciGR.addQuery('site', this.siteID);
		ciGR.addQuery('status', 'In');
		ciGR.orderByDesc('check_in_time');
		ciGR.query();
		var count = ciGR.getRowCount();
		
		while (ciGR.next()) {
			var checkIn = {};
			checkIn.user_name = ciGR.user.getDisplayValue();
			checkIn.sys_id = ciGR.getValue('user');
			checkIn.date = ciGR.check_in_time;
			
			list.push(checkIn);
		}
		var len = list.length;
		gs.info('len=' + len + ' list=\n' + JSON.stringify(list, null, 2));
		
		return list;
	},
	
	lastCheckedIn : function() {
	
		var ci = new GlideRecord(this.checkInTable);
		ci.addQuery('user', this.userID);
		ci.addQuery('site', this.siteID);
		ci.addQuery('status', 'In');
		ci.orderByDesc('check_in_time');
		ci.setLimit(1);
		ci.query();
		
		if (ci.next()) {
			return ci.check_in_time;
		}
		
		return;

	},

	type: 'CheckInManager'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>chuck.tomasi</sys_created_by>
        <sys_created_on>2017-03-22 22:04:14</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>4b658dafdb697e409093b3d0ef9619bf</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>CheckInManager</sys_name>
        <sys_package display_value="Tour" source="x_snc_tour">0cbf730fdb2dba409093b3d0ef96190e</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Tour">0cbf730fdb2dba409093b3d0ef96190e</sys_scope>
        <sys_update_name>sys_script_include_4b658dafdb697e409093b3d0ef9619bf</sys_update_name>
        <sys_updated_by>chuck.tomasi</sys_updated_by>
        <sys_updated_on>2017-03-22 23:20:25</sys_updated_on>
    </sys_script_include>
</record_update>
